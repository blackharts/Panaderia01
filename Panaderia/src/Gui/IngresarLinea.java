package Gui;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import Controller.LineaJpaController;
import Controller.ProductoJpaController;
import Controller.exceptions.IllegalOrphanException;
import Controller.exceptions.NonexistentEntityException;
import Data.Familia;
import Data.Linea;
import Data.Producto;
import Data.UnidadMedida;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JohansitoNitido
 */
public class IngresarLinea extends javax.swing.JInternalFrame {

    public IngresarLinea() {
        initComponents();
        mostrarTabla();
    }
    
    void eliminar(){
     try {
     Integer id = (Integer) Tabla_detalle.getValueAt(Tabla_detalle.getSelectedRow(), 0);
     LineaJpaController prd = new LineaJpaController(entityManager2.getEntityManagerFactory());
            int Confirmacion = JOptionPane.showConfirmDialog(this, "Desea eliminar?", "Confirmacion", JOptionPane.YES_NO_OPTION);
              if (Confirmacion == 0) {
                    if (id != null) {
                        prd.destroy(id);
                        this.mostrarTabla();
                        JOptionPane.showMessageDialog(null, "Se ha eliminado el ID: " + id);

                    } else {
                        JOptionPane.showMessageDialog(null, "No ha seleccionado una Linea");
                    }
                }
      } catch (Exception e) {
                e.printStackTrace();
            }
    }
 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager2 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PanaderiaPU").createEntityManager();
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager2.createQuery("SELECT U FROM Linea U");
        desc_linea = new javax.swing.JLabel();
        tf_descrip = new javax.swing.JTextField();
        bt_guardadr = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        bt_editar = new javax.swing.JButton();
        bt_eliminar123 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla_detalle = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Linea");

        desc_linea.setText("Descripci√≥n  Linea");

        tf_descrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_descripActionPerformed(evt);
            }
        });

        bt_guardadr.setText("Guardar");
        bt_guardadr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_guardadrActionPerformed(evt);
            }
        });

        titulo.setText("Linea Articulo");

        bt_editar.setText("Editar");
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_eliminar123.setText("Eliminar");
        bt_eliminar123.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminar123ActionPerformed(evt);
            }
        });

        Tabla_detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre Linea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla_detalle);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bt_eliminar123, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(bt_guardadr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(desc_linea)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tf_descrip)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 123, Short.MAX_VALUE))))
                        .addComponent(bt_editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(desc_linea)
                    .addComponent(tf_descrip, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_guardadr, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_eliminar123, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_guardadrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_guardadrActionPerformed
       
        LineaJpaController prd = new LineaJpaController(entityManager2.getEntityManagerFactory());
        Linea Nueva_linea = new Linea();          
        if(tf_descrip.getText().length()==0){
        JOptionPane.showMessageDialog(null, " No se admiten campos vacios ");
        }else{
        Nueva_linea.setLineNombre(tf_descrip.getText());
        prd.create(Nueva_linea);
        JOptionPane.showMessageDialog(null, "Datos insertados correctamente");
        mostrarTabla();
        limpiar();}

    }//GEN-LAST:event_bt_guardadrActionPerformed

    private void bt_eliminar123ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminar123ActionPerformed
        this.eliminar();
    }//GEN-LAST:event_bt_eliminar123ActionPerformed

    private void tf_descripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_descripActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_descripActionPerformed

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed

    }//GEN-LAST:event_bt_editarActionPerformed

    public void mostrarTabla(){
        
        String[] columnas = {"Id", "Linea"};
        Object[] obj = new Object[5];
        DefaultTableModel tabla = new DefaultTableModel(null, columnas);
        Linea m = new Linea();
        List<Linea> pro = query1.getResultList();
            /* select * from ProdudcionPan*/
    
            for (int i = 0; i < pro.size(); i++) {
                m = (Linea) pro.get(i);
                obj[0] = m.getLineId();
                obj[1] = m.getLineNombre();
                tabla.addRow(obj);
    }
                Tabla_detalle.setModel(tabla);}
 
   
    public void limpiar() {
        tf_descrip.setText("");
    }
    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_detalle;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_eliminar123;
    private javax.swing.JButton bt_guardadr;
    private javax.swing.JLabel desc_linea;
    private javax.persistence.EntityManager entityManager2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.persistence.Query query1;
    private javax.swing.JTextField tf_descrip;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
    }


