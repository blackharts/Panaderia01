/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Controller.PrecioCostoJpaController;
import Controller.PrecioVentaJpaController;
import Controller.ProduccionPanJpaController;
import Data.PrecioCosto;
import Data.PrecioVenta;
import Data.ProduccionPan;
import Data.Producto;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luisa
 */
public class MostrarCostosPan extends javax.swing.JInternalFrame {

    /**
     * Creates new form VisualizarCostos
     */
    public MostrarCostosPan() {
        initComponents();
        
        cargar_Combo();

        bt_mostrar_reporte.setEnabled(false);
        
        Calendar min = Calendar.getInstance();  
            min.set(Calendar.YEAR,2015);  
            min.set(Calendar.MONTH,12);  
            min.set(Calendar.DATE,12); 
            tf_fecha_inicial.setMinSelectableDate(min.getTime());
            tf_fecha_final.setMinSelectableDate(min.getTime());
            
        Calendar max = Calendar.getInstance();  
        max.set(Calendar.YEAR,2020);    
        max.set(Calendar.MONTH,12);    
        max.set(Calendar.DATE,31);    
        tf_fecha_final.setMaxSelectableDate(new Date());
        tf_fecha_inicial.setMaxSelectableDate(new Date());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager1 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PanaderiaPU").createEntityManager();
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager1.createQuery("select e  from Producto e");
        jPanel1 = new javax.swing.JPanel();
        jl_FechaInicio = new javax.swing.JLabel();
        tf_fecha_inicial = new com.toedter.calendar.JDateChooser();
        jl_FechaFinal = new javax.swing.JLabel();
        tf_fecha_final = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        cb_tipo_pan = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_tabla_reportes_pan = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        bt_mostrar_reporte = new javax.swing.JButton();
        bt_eliminar_reporte = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Reportes de Rentablidad Pan");

        jPanel1.setLayout(new java.awt.GridLayout(3, 2, 10, 10));

        jl_FechaInicio.setText("Fecha Inicial:");
        jPanel1.add(jl_FechaInicio);
        jPanel1.add(tf_fecha_inicial);

        jl_FechaFinal.setText("Fecha Final:");
        jPanel1.add(jl_FechaFinal);
        jPanel1.add(tf_fecha_final);

        jLabel3.setText("Tipo pan:");
        jPanel1.add(jLabel3);

        cb_tipo_pan.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cb_tipo_pan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_panActionPerformed(evt);
            }
        });
        jPanel1.add(cb_tipo_pan);

        jt_tabla_reportes_pan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Precio Costo", "Precio venta", "Ren.Porcentaje", "Ren.Moneda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jt_tabla_reportes_pan);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        bt_mostrar_reporte.setText("Mostrar Reporte");
        bt_mostrar_reporte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_mostrar_reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_mostrar_reporteActionPerformed(evt);
            }
        });
        jPanel2.add(bt_mostrar_reporte);

        bt_eliminar_reporte.setText("Eliminar Reporte");
        bt_eliminar_reporte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_eliminar_reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminar_reporteActionPerformed(evt);
            }
        });
        jPanel2.add(bt_eliminar_reporte);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_tipo_panActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_panActionPerformed
                 bt_mostrar_reporte.setEnabled(true);
    }//GEN-LAST:event_cb_tipo_panActionPerformed

    private void bt_mostrar_reporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_mostrar_reporteActionPerformed
        this.datos();
    }//GEN-LAST:event_bt_mostrar_reporteActionPerformed

    private void bt_eliminar_reporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminar_reporteActionPerformed
        this.Clear_Table1();
    }//GEN-LAST:event_bt_eliminar_reporteActionPerformed
    public void datos() {
DefaultTableModel mode = (DefaultTableModel) jt_tabla_reportes_pan.getModel();
PrecioCosto findPrecioCosto;      
PrecioVenta findPrecioVenta;
ProduccionPan finProduccionPan;
       
PrecioCostoJpaController pjcontroller = new PrecioCostoJpaController();
PrecioVentaJpaController pjVenta = new PrecioVentaJpaController();
ProduccionPanJpaController pjProdu =new ProduccionPanJpaController(entityManager1.getEntityManagerFactory());
findPrecioCosto = pjcontroller.findPrecioCosto(cb_tipo_pan.getSelectedIndex() + 1);
        findPrecioVenta = pjVenta.findPrecioVenta(cb_tipo_pan.getSelectedIndex() + 1);
        finProduccionPan=pjProdu.findProduccionPan(cb_tipo_pan.getSelectedIndex() + 1);
        Date date = new Date();// se trajo la fecha del sistema
        Date fecha_inicio = tf_fecha_inicial.getDate();
        Date fecha_final = tf_fecha_final.getDate();
        Date fecha_pro=(finProduccionPan.getPpanFechaIngreso());
        double Kilos_producidos=(finProduccionPan.getPpanProduccion());
        int valor_costo = (findPrecioCosto.getCostValor());          
        int valor_venta = (findPrecioVenta.getPrecvValor());//se busco valores relacionados con precio venta       
        int resta_valores = (valor_venta - valor_costo);//se resto el valor venta de pan y costo pan 
        double kilos_resultado=(valor_venta*Kilos_producidos)-(valor_costo*Kilos_producidos);
        double porcentaje = (resta_valores * 100 / valor_venta);// se saco el porcentaje  de rentabilidad        
 try
        {
            if (fecha_pro.after(fecha_inicio)&& fecha_pro.before(fecha_final)) 
{
            mode.addRow(new Object[]{date, valor_costo, valor_venta, "%" + porcentaje, kilos_resultado});                      
}else{
                JOptionPane.showMessageDialog(null,"No ahi produccion En las fechas indicadas");        
}     
  }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null," No se admiten campos vacios ");
  }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null," Verifique Campos en la Base de datos ");
    }
 
    }
       
    public void cargar_Combo() {
        List<Producto> prod = query1.getResultList(); // se obtienen los productos y almcenan en lista
        cb_tipo_pan.removeAllItems();//se limpia el combobox
        for (Producto p : prod) {
            // se recorre
            cb_tipo_pan.addItem(p.getProdNombre());//se muestra en el combobox  
        }
    }
    private void Clear_Table1(){
        DefaultTableModel mode = (DefaultTableModel) jt_tabla_reportes_pan.getModel();
        for (int i = 0; i < jt_tabla_reportes_pan.getRowCount(); i++) {
        mode.removeRow(i);
        i-=1;
        }
        }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_eliminar_reporte;
    private javax.swing.JButton bt_mostrar_reporte;
    private javax.swing.JComboBox cb_tipo_pan;
    private javax.persistence.EntityManager entityManager1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jl_FechaFinal;
    private javax.swing.JLabel jl_FechaInicio;
    private javax.swing.JTable jt_tabla_reportes_pan;
    private javax.persistence.Query query1;
    private com.toedter.calendar.JDateChooser tf_fecha_final;
    private com.toedter.calendar.JDateChooser tf_fecha_inicial;
    // End of variables declaration//GEN-END:variables
}
